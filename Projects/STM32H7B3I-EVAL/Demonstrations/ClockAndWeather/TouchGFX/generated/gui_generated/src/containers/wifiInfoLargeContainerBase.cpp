/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/wifiInfoLargeContainerBase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

wifiInfoLargeContainerBase::wifiInfoLargeContainerBase() :
    flexButtonCallback(this, &wifiInfoLargeContainerBase::flexButtonCallbackHandler)
{
    setWidth(560);
    setHeight(60);

    wifiSSID.setPosition(30, 0, 439, 41);
    wifiSSID.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    wifiSSID.setLinespacing(0);
    Unicode::snprintf(wifiSSIDBuffer, WIFISSID_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID185).getText());
    wifiSSID.setWildcard(wifiSSIDBuffer);
    wifiSSID.setTypedText(touchgfx::TypedText(T_SINGLEUSEID184));

    encryption.setPosition(30, 29, 439, 25);
    encryption.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    encryption.setLinespacing(0);
    Unicode::snprintf(encryptionBuffer, ENCRYPTION_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID187).getText());
    encryption.setWildcard(encryptionBuffer);
    encryption.setTypedText(touchgfx::TypedText(T_SINGLEUSEID186));

    signalStrengthIcon.setXY(469, 6);
    signalStrengthIcon.setBitmap(touchgfx::Bitmap(BITMAP_WIFI_LOW_ICON_2X_ID));

    listButtonOverlay.setBoxWithBorderPosition(0, 0, 0, 0);
    listButtonOverlay.setBorderSize(5);
    listButtonOverlay.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    listButtonOverlay.setPosition(0, 0, 560, 60);
    listButtonOverlay.setAction(flexButtonCallback);

    add(wifiSSID);
    add(encryption);
    add(signalStrengthIcon);
    add(listButtonOverlay);
}

void wifiInfoLargeContainerBase::initialize()
{
	
}

void wifiInfoLargeContainerBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &listButtonOverlay)
    {
        //Interaction1
        //When listButtonOverlay clicked call virtual function
        //Call elementSelected
        elementSelected();
    }
}
