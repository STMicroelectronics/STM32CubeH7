/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WIFIINFOLARGECONTAINERBASE_HPP
#define WIFIINFOLARGECONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class wifiInfoLargeContainerBase : public touchgfx::Container
{
public:
    wifiInfoLargeContainerBase();
    virtual ~wifiInfoLargeContainerBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void elementSelected()
    {
        // Override and implement this function in wifiInfoLargeContainer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TextAreaWithOneWildcard wifiSSID;
    touchgfx::TextAreaWithOneWildcard encryption;
    touchgfx::Image signalStrengthIcon;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > listButtonOverlay;

    /*
     * Wildcard Buffers
     */
    static const uint16_t WIFISSID_SIZE = 40;
    touchgfx::Unicode::UnicodeChar wifiSSIDBuffer[WIFISSID_SIZE];
    static const uint16_t ENCRYPTION_SIZE = 40;
    touchgfx::Unicode::UnicodeChar encryptionBuffer[ENCRYPTION_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<wifiInfoLargeContainerBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // WIFIINFOLARGECONTAINERBASE_HPP
