/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGSVIEWBASE_HPP
#define SETTINGSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settings_screen/SettingsPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/McuLoadWidget.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/FadeAnimator.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
class SettingsViewBase : public touchgfx::View<SettingsPresenter>
{
public:
    SettingsViewBase();
    virtual ~SettingsViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void nextDoneButtonHandler()
    {
        // Override and implement this function in Settings
    }

    virtual void settingsButtonHandler()
    {
        // Override and implement this function in Settings
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::Button gotoMenuButton;
    McuLoadWidget mcuLoad;
    touchgfx::TextArea headline;
    touchgfx::FadeAnimator< touchgfx::Button > settingsButton;
    touchgfx::Container containerViewPort;
    touchgfx::MoveAnimator< touchgfx::Container > mainScreenContainer;
    touchgfx::Image calendar;
    touchgfx::TextAreaWithOneWildcard mainScreenDateDayText;
    touchgfx::TextAreaWithOneWildcard mainScreenDateYearText;
    touchgfx::TextAreaWithOneWildcard mainScreenDateMonthText;

    touchgfx::MoveAnimator< touchgfx::Container > settingsContainer;


    touchgfx::MoveAnimator< touchgfx::Image > dotBackground;
    touchgfx::MoveAnimator< touchgfx::Button > nextDoneButton;


    /*
     * Wildcard Buffers
     */
    static const uint16_t MAINSCREENDATEDAYTEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar mainScreenDateDayTextBuffer[MAINSCREENDATEDAYTEXT_SIZE];
    static const uint16_t MAINSCREENDATEYEARTEXT_SIZE = 5;
    touchgfx::Unicode::UnicodeChar mainScreenDateYearTextBuffer[MAINSCREENDATEYEARTEXT_SIZE];
    static const uint16_t MAINSCREENDATEMONTHTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar mainScreenDateMonthTextBuffer[MAINSCREENDATEMONTHTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SettingsViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SETTINGSVIEWBASE_HPP
