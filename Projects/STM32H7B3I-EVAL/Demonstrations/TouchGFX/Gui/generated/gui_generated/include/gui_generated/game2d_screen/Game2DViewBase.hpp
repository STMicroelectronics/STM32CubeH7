/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GAME2DVIEWBASE_HPP
#define GAME2DVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/game2d_screen/Game2DPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>

#include <touchgfx/widgets/AnimatedImage.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <gui/containers/McuLoadWidget.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/EasingEquations.hpp>
#include <touchgfx/mixins/MoveAnimator.hpp>
class Game2DViewBase : public touchgfx::View<Game2DPresenter>
{
public:
    Game2DViewBase();
    virtual ~Game2DViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void chromArtButtonHandler()
    {
        // Override and implement this function in Game2D
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image background;
    touchgfx::Container gameArea;


    touchgfx::MoveAnimator< touchgfx::AnimatedImage > playerCharacter;
    touchgfx::Button flyButton;
    touchgfx::Button chromArtOnOffButton;
    McuLoadWidget mcuLoad;
    touchgfx::Button menuButton;
    touchgfx::TextArea chromArtDescription;
    touchgfx::TextArea chromArtHeader;
    touchgfx::TextAreaWithOneWildcard scoreValue;
    touchgfx::TextArea scoreText;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SCOREVALUE_SIZE = 16;
    touchgfx::Unicode::UnicodeChar scoreValueBuffer[SCOREVALUE_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Game2DViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GAME2DVIEWBASE_HPP
