/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settings_screen/SettingsViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

SettingsViewBase::SettingsViewBase() :
    buttonCallback(this, &SettingsViewBase::buttonCallbackHandler)
{
    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLS_BACKGROUND_ID));

    gotoMenuButton.setXY(21, 14);
    gotoMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_ICON_ID), touchgfx::Bitmap(BITMAP_MENU_ICON_PRESSED_ID));
    gotoMenuButton.setAction(buttonCallback);

    mcuLoad.setXY(610, 27);

    headline.setPosition(200, 20, 400, 36);
    headline.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    headline.setLinespacing(0);
    headline.setTypedText(touchgfx::TypedText(T_SETTINGS_HEADLINE0));

    settingsButton.setXY(317, 394);
    settingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_SETTINGS_BUTTON_ID), touchgfx::Bitmap(BITMAP_SETTINGS_BUTTON_PRESSED_ID));
    settingsButton.setAction(buttonCallback);

    containerViewPort.setPosition(0, 84, 800, 396);

    mainScreenContainer.setPosition(0, 0, 800, 396);

    calendar.setXY(440, 46);
    calendar.setBitmap(touchgfx::Bitmap(BITMAP_SETTINGS_CALENDAR_ID));
    mainScreenContainer.add(calendar);

    mainScreenDateDayText.setPosition(488, 116, 125, 92);
    mainScreenDateDayText.setColor(touchgfx::Color::getColorFrom24BitRGB(27, 56, 72));
    mainScreenDateDayText.setLinespacing(0);
    mainScreenDateDayTextBuffer[0] = 0;
    mainScreenDateDayText.setWildcard(mainScreenDateDayTextBuffer);
    mainScreenDateDayText.setTypedText(touchgfx::TypedText(T_SETTINGS_MAIN_DATE_DAY));
    mainScreenContainer.add(mainScreenDateDayText);

    mainScreenDateYearText.setPosition(488, 212, 125, 35);
    mainScreenDateYearText.setColor(touchgfx::Color::getColorFrom24BitRGB(27, 56, 72));
    mainScreenDateYearText.setLinespacing(0);
    mainScreenDateYearTextBuffer[0] = 0;
    mainScreenDateYearText.setWildcard(mainScreenDateYearTextBuffer);
    mainScreenDateYearText.setTypedText(touchgfx::TypedText(T_SETTINGS_MAIN_DATE_YEAR));
    mainScreenContainer.add(mainScreenDateYearText);

    mainScreenDateMonthText.setPosition(460, 82, 180, 40);
    mainScreenDateMonthText.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    mainScreenDateMonthText.setLinespacing(0);
    mainScreenDateMonthTextBuffer[0] = 0;
    mainScreenDateMonthText.setWildcard(mainScreenDateMonthTextBuffer);
    mainScreenDateMonthText.setTypedText(touchgfx::TypedText(T_SETTINGS_MAIN_DATE_MONTH));
    mainScreenContainer.add(mainScreenDateMonthText);
    containerViewPort.add(mainScreenContainer);

    settingsContainer.setPosition(0, 0, 800, 396);


    containerViewPort.add(settingsContainer);

    dotBackground.setXY(313, 315);
    dotBackground.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLS_3DOTS_ID));
    containerViewPort.add(dotBackground);

    nextDoneButton.setXY(594, 310);
    nextDoneButton.setBitmaps(touchgfx::Bitmap(BITMAP_SETTINGS_NEXT_ID), touchgfx::Bitmap(BITMAP_SETTINGS_NEXT_PRESSED_ID));
    nextDoneButton.setAction(buttonCallback);
    containerViewPort.add(nextDoneButton);

    add(background);
    add(gotoMenuButton);
    add(mcuLoad);
    add(headline);
    add(settingsButton);
    add(containerViewPort);
}

void SettingsViewBase::setupScreen()
{
    mcuLoad.initialize();
}

void SettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &gotoMenuButton)
    {
        //gotoMenuButtonHandler
        //When gotoMenuButton clicked execute C++ code
        //Execute C++ code
        presenter->gotoMenuSelected();
    }
    else if (&src == &settingsButton)
    {
        //SettingsButtonHandler
        //When settingsButton clicked call virtual function
        //Call settingsButtonHandler
        settingsButtonHandler();
    }
    else if (&src == &nextDoneButton)
    {
        //NextDoneButtonHandler
        //When nextDoneButton clicked call virtual function
        //Call nextDoneButtonHandler
        nextDoneButtonHandler();
    }
}
