/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/controls_screen/ControlsViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

ControlsViewBase::ControlsViewBase() :
    buttonCallback(this, &ControlsViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &ControlsViewBase::sliderValueChangedCallbackHandler)
{
    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLS_BACKGROUND_ID));

    dots.setXY(332, 399);
    dots.setBitmap(touchgfx::Bitmap(BITMAP_CONTROLS_2DOTS_ID));

    mcuLoad.setXY(610, 27);

    gotoMenuButton.setXY(21, 14);
    gotoMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_ICON_ID), touchgfx::Bitmap(BITMAP_MENU_ICON_PRESSED_ID));
    gotoMenuButton.setAction(buttonCallback);

    headline.setPosition(200, 20, 400, 34);
    headline.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    headline.setLinespacing(0);
    headline.setTypedText(touchgfx::TypedText(T_CONTROLS_HEADLINE0));

    potentiometerScreen.setPosition(0, 84, 800, 396);

    board.setXY(0, 34);
    board.setBitmap(touchgfx::Bitmap(BITMAP_BOARD_IMAGE_ID));
    potentiometerScreen.add(board);

    line.setXY(303, 134);
    line.setBitmap(touchgfx::Bitmap(BITMAP_CONTROL_LINE_INDICATOR_ID));
    potentiometerScreen.add(line);

    brightnessScreen.setPosition(0, 84, 800, 396);

    brightnessSmall.setXY(55, 71);
    brightnessSmall.setBitmap(touchgfx::Bitmap(BITMAP_ICON_BRIGHTNESS_SMALL_ID));
    brightnessScreen.add(brightnessSmall);

    brightnessLarge.setXY(667, 55);
    brightnessLarge.setBitmap(touchgfx::Bitmap(BITMAP_ICON_BRIGHTNESS_LARGE_ID));
    brightnessScreen.add(brightnessLarge);

    slider.setXY(17, 172);
    slider.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_ID), touchgfx::Bitmap(BITMAP_SLIDER_FULL_ID), touchgfx::Bitmap(BITMAP_SLIDER_KNOP_ID));
    slider.setupHorizontalSlider(13, 24, 0, 0, 646);
    slider.setValueRange(0, 100);
    slider.setValue(0);
    slider.setNewValueCallback(sliderValueChangedCallback);
    brightnessScreen.add(slider);

    brightnessPercentageText.setXY(483, 76);
    brightnessPercentageText.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    brightnessPercentageText.setLinespacing(0);
    brightnessPercentageText.setTypedText(touchgfx::TypedText(T_CONTROLS_BRIGHTNESS_PERCENTAGE));
    brightnessScreen.add(brightnessPercentageText);

    brightnessText.setPosition(300, 26, 177, 98);
    brightnessText.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    brightnessText.setLinespacing(0);
    brightnessTextBuffer[0] = 0;
    brightnessText.setWildcard(brightnessTextBuffer);
    brightnessText.setTypedText(touchgfx::TypedText(T_CONTROLS_BRIGHTNESS_READOUT));
    brightnessScreen.add(brightnessText);

    add(background);
    add(dots);
    add(mcuLoad);
    add(gotoMenuButton);
    add(headline);
    add(potentiometerScreen);
    add(brightnessScreen);
}

void ControlsViewBase::setupScreen()
{
    mcuLoad.initialize();
}

void ControlsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &gotoMenuButton)
    {
        //gotoMenuButtonHandler
        //When gotoMenuButton clicked execute C++ code
        //Execute C++ code
        presenter->gotoMenuSelected();
    }
}

void ControlsViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider)
    {
        //sliderInteraction
        //When slider value changed call virtual function
        //Call newBrightnessValueHandler
        newBrightnessValueHandler(value);
    }
}
