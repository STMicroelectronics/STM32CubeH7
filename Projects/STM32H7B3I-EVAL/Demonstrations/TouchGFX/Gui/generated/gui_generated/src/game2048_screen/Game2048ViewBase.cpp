/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/game2048_screen/Game2048ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Game2048ViewBase::Game2048ViewBase() :
    buttonCallback(this, &Game2048ViewBase::buttonCallbackHandler)
{
    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_GAME_2048_BACKGROUND_ID));

    newGameButton.setXY(528, 106);
    newGameButton.setBitmaps(touchgfx::Bitmap(BITMAP_NEW_GAME_BUTTON_ID), touchgfx::Bitmap(BITMAP_NEW_GAME_BUTTON_PRESSED_ID));
    newGameButton.setAction(buttonCallback);

    autoPlayButton.setXY(528, 183);
    autoPlayButton.setBitmaps(touchgfx::Bitmap(BITMAP_AUTO_PLAY_BUTTON_ID), touchgfx::Bitmap(BITMAP_AUTO_PLAY_BUTTON_PRESSED_ID));
    autoPlayButton.setAction(buttonCallback);

    howToPlayButton.setXY(528, 260);
    howToPlayButton.setBitmaps(touchgfx::Bitmap(BITMAP_HOW_TO_PLAY_BUTTON_ID), touchgfx::Bitmap(BITMAP_HOW_TO_PLAY_BUTTON_PRESSED_ID));
    howToPlayButton.setAction(buttonCallback);

    gotoMenu.setXY(640, 423);
    gotoMenu.setBitmaps(touchgfx::Bitmap(BITMAP_GAME_2048_MENU_BUTTON_ID), touchgfx::Bitmap(BITMAP_GAME_2048_MENU_BUTTON_PRESSED_ID));
    gotoMenu.setAction(buttonCallback);

    mcuLoad.setXY(588, 336);

    scoreTxt.setPosition(547, 38, 142, 50);
    scoreTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    scoreTxt.setLinespacing(0);
    scoreTxtBuffer[0] = 0;
    scoreTxt.setWildcard(scoreTxtBuffer);
    scoreTxt.setTypedText(touchgfx::TypedText(T_2048_SCORE));

    deltaScoreTxt.setPosition(547, 38, 142, 49);
    deltaScoreTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(40, 40, 40));
    deltaScoreTxt.setLinespacing(0);
    deltaScoreTxt.setAlpha(0);
    deltaScoreTxtBuffer[0] = 0;
    deltaScoreTxt.setWildcard(deltaScoreTxtBuffer);
    deltaScoreTxt.setTypedText(touchgfx::TypedText(T_2048_SCORE_DELTA));

    endGameStatus.setXY(221, 203);
    endGameStatus.setVisible(false);
    endGameStatus.setBitmap(touchgfx::Bitmap(BITMAP_GAME_2048_YOU_WIN_ID));

    howToPlayModalWindow.setBackground(touchgfx::BitmapId(BITMAP_HOW_TO_PLAY_BACKGROUND_ID), 203, 32);
    howToPlayModalWindow.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    howToPlayModalWindow.setShadeAlpha(160);
    howToPlayModalWindow.hide();

    closeHowToPlayButton.setXY(343, 6);
    closeHowToPlayButton.setBitmaps(touchgfx::Bitmap(BITMAP_HOW_TO_PLAY_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_HOW_TO_PLAY_CLOSE_BUTTON_ID));
    closeHowToPlayButton.setAction(buttonCallback);
    howToPlayModalWindow.add(closeHowToPlayButton);

    add(background);
    add(newGameButton);
    add(autoPlayButton);
    add(howToPlayButton);
    add(gotoMenu);
    add(mcuLoad);
    add(scoreTxt);
    add(deltaScoreTxt);
    add(endGameStatus);
    add(howToPlayModalWindow);
}

void Game2048ViewBase::setupScreen()
{
    mcuLoad.initialize();
}

void Game2048ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &newGameButton)
    {
        //newGamePressed
        //When newGameButton clicked call virtual function
        //Call newGamePressed
        newGamePressed();
    }
    else if (&src == &autoPlayButton)
    {
        //autoPlayPressed
        //When autoPlayButton clicked call virtual function
        //Call autoPlayPressed
        autoPlayPressed();
    }
    else if (&src == &howToPlayButton)
    {
        //howToPlayPressed
        //When howToPlayButton clicked call virtual function
        //Call howToPlayPressed
        howToPlayPressed();
    }
    else if (&src == &gotoMenu)
    {
        //gotoMenuPressed
        //When gotoMenu clicked execute C++ code
        //Execute C++ code
        presenter->gotoMenuSelected();
    }
    else if (&src == &closeHowToPlayButton)
    {
        //closeHowToPlayPressed
        //When closeHowToPlayButton clicked call virtual function
        //Call closeHowToPlayPressed
        closeHowToPlayPressed();
    }
}
