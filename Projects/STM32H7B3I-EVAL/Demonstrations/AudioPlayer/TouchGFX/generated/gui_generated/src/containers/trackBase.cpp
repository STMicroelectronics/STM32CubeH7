/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/trackBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

trackBase::trackBase() :
    buttonCallback(this, &trackBase::buttonCallbackHandler),
    trigger1Callback(0)
{
    setWidth(336);
    setHeight(52);

    border.setXY(0, 2);
    border.setBitmap(touchgfx::Bitmap(BITMAP_TRACK_LIST_BOX_ID));

    selectedTrackBorder.setXY(0, 3);
    selectedTrackBorder.setVisible(false);
    selectedTrackBorder.setBitmap(touchgfx::Bitmap(BITMAP_TRACK_LIST_BOX_SELECTED_ID));

    trackNumber.setPosition(13, 12, 21, 24);
    trackNumber.setColor(touchgfx::Color::getColorFrom24BitRGB(85, 81, 120));
    trackNumber.setLinespacing(0);
    Unicode::snprintf(trackNumberBuffer, TRACKNUMBER_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID12).getText());
    trackNumber.setWildcard(trackNumberBuffer);
    trackNumber.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    trackName.setPosition(37, 10, 206, 30);
    trackName.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    trackName.setLinespacing(0);
    Unicode::snprintf(trackNameBuffer, TRACKNAME_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID8).getText());
    trackName.setWildcard(trackNameBuffer);
    trackName.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));

    trackDuration.setPosition(265, 12, 50, 26);
    trackDuration.setColor(touchgfx::Color::getColorFrom24BitRGB(177, 174, 203));
    trackDuration.setLinespacing(0);
    Unicode::snprintf(trackDurationBuffer, TRACKDURATION_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
    trackDuration.setWildcard(trackDurationBuffer);
    trackDuration.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));

    playPauseButton.setXY(246, 21);
    playPauseButton.setBitmaps(touchgfx::Bitmap(BITMAP_ICON_LIST_PLAY_ID), touchgfx::Bitmap(BITMAP_ICON_LIST_PAUSE_ID));
    playPauseButton.setAction(buttonCallback);

    add(border);
    add(selectedTrackBorder);
    add(trackNumber);
    add(trackName);
    add(trackDuration);
    add(playPauseButton);
}

void trackBase::initialize()
{
	
}

void trackBase::playPausePressed(bool value)
{

}

void trackBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &playPauseButton)
    {
        //Interaction2
        //When playPauseButton clicked call playPausePressed on track
        //Call playPausePressed
        playPausePressed(playPauseButton.getState());
    }
}
