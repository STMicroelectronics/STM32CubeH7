/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TRACKBASE_HPP
#define TRACKBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class trackBase : public touchgfx::Container
{
public:
    trackBase();
    virtual ~trackBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setTrigger1Callback(touchgfx::GenericCallback<>& callback)
    {
        this->trigger1Callback = &callback;
    }

    /*
     * Custom Actions
     */
    virtual void playPausePressed(bool value);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitTrigger1Callback()
    {
        if (trigger1Callback && trigger1Callback->isValid())
        {
            this->trigger1Callback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Image border;
    touchgfx::Image selectedTrackBorder;
    touchgfx::TextAreaWithOneWildcard trackNumber;
    touchgfx::TextAreaWithOneWildcard trackName;
    touchgfx::TextAreaWithOneWildcard trackDuration;
    touchgfx::ToggleButton playPauseButton;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TRACKNUMBER_SIZE = 4;
    touchgfx::Unicode::UnicodeChar trackNumberBuffer[TRACKNUMBER_SIZE];
    static const uint16_t TRACKNAME_SIZE = 40;
    touchgfx::Unicode::UnicodeChar trackNameBuffer[TRACKNAME_SIZE];
    static const uint16_t TRACKDURATION_SIZE = 6;
    touchgfx::Unicode::UnicodeChar trackDurationBuffer[TRACKDURATION_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<trackBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* trigger1Callback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TRACKBASE_HPP
