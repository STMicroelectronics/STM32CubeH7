#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_RobotoCondensed_Bold_18_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE =
{
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0020, space], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0022, quotedbl], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0022, quotedbl], Kerning dist = -2)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0022, quotedbl], Kerning dist = -3)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x00F1, -1 },  // (First char = [0x00F1, ntilde], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x00F2, -1 },  // (First char = [0x00F2, ograve], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x00F3, -1 },  // (First char = [0x00F3, oacute], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x00F4, -1 },  // (First char = [0x00F4, ocircumflex], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x00F5, -1 },  // (First char = [0x00F5, otilde], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x00F6, -1 },  // (First char = [0x00F6, odieresis], Second char = [0x0022, quotedbl], Kerning dist = -1)
    { 0x002C, -2 },  // (First char = [0x002C, comma], Second char = [0x0027, quotesingle], Kerning dist = -2)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0027, quotesingle], Kerning dist = -2)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0027, quotesingle], Kerning dist = -3)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x00F1, -1 },  // (First char = [0x00F1, ntilde], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x00F2, -1 },  // (First char = [0x00F2, ograve], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x00F3, -1 },  // (First char = [0x00F3, oacute], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x00F4, -1 },  // (First char = [0x00F4, ocircumflex], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x00F5, -1 },  // (First char = [0x00F5, otilde], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x00F6, -1 },  // (First char = [0x00F6, odieresis], Second char = [0x0027, quotesingle], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x002C, comma], Kerning dist = -4)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x002C, comma], Kerning dist = -2)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x002C, comma], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002D, hyphen], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x002D, hyphen], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0050, -4 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -4)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00DD, -2 },  // (First char = [0x00DD, Yacute], Second char = [0x002E, period], Kerning dist = -2)
    { 0x00FD, -1 },  // (First char = [0x00FD, yacute], Second char = [0x002E, period], Kerning dist = -1)
    { 0x00FF, -1 },  // (First char = [0x00FF, ydieresis], Second char = [0x002E, period], Kerning dist = -1)
    { 0x002F, -2 },  // (First char = [0x002F, slash], Second char = [0x002F, slash], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00C0, -1 },  // (First char = [0x00C0, Agrave], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00C1, -1 },  // (First char = [0x00C1, Aacute], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00C2, -1 },  // (First char = [0x00C2, Acircumflex], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00C3, -1 },  // (First char = [0x00C3, Atilde], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00C4, -1 },  // (First char = [0x00C4, Adieresis], Second char = [0x003F, question], Kerning dist = -1)
    { 0x00C5, -1 },  // (First char = [0x00C5, Aring], Second char = [0x003F, question], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0020, -1 },  // (First char = [0x0020, space], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D0, -1 },  // (First char = [0x00D0, Eth], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D2, -1 },  // (First char = [0x00D2, Ograve], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D3, -1 },  // (First char = [0x00D3, Oacute], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D4, -1 },  // (First char = [0x00D4, Ocircumflex], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D5, -1 },  // (First char = [0x00D5, Otilde], Second char = [0x0054, T], Kerning dist = -1)
    { 0x00D6, -1 },  // (First char = [0x00D6, Odieresis], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0055, U], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0055, U], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x00AD, uni00AD], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00AD, uni00AD], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00AD, uni00AD], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x00AD, uni00AD], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x00AD, uni00AD], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00AD, uni00AD], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00AD, uni00AD], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C0, Agrave], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C0, Agrave], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C1, Aacute], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C1, Aacute], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C2, Acircumflex], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C2, Acircumflex], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C3, Atilde], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C3, Atilde], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C4, Adieresis], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C4, Adieresis], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x00C5, Aring], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C5, Aring], Kerning dist = -1)
    { 0x0050, -3 },  // (First char = [0x0050, P], Second char = [0x00C6, AE], Kerning dist = -3)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00C6, AE], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00C6, AE], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00C7, Ccedilla], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D2, Ograve], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D3, Oacute], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D4, Ocircumflex], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D5, Otilde], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D6, Odieresis], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00D8, Oslash], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00D9, Ugrave], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00D9, Ugrave], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00DA, Uacute], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00DA, Uacute], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00DB, Ucircumflex], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00DB, Ucircumflex], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00DC, Udieresis], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00DC, Udieresis], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x00DD, Yacute], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E0, agrave], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E1, aacute], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E2, acircumflex], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E2, acircumflex], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E2, acircumflex], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E3, atilde], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E3, atilde], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E3, atilde], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E4, adieresis], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E4, adieresis], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E4, adieresis], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E5, aring], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E5, aring], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E5, aring], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E6, ae], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E7, ccedilla], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E8, egrave], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00E9, eacute], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00EA, ecircumflex], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00EB, edieresis], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00F1, ntilde], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F2, ograve], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00F2, ograve], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F3, oacute], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00F3, oacute], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F4, ocircumflex], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00F4, ocircumflex], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F5, otilde], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00F5, otilde], Kerning dist = -1)
    { 0x0022, -1 },  // (First char = [0x0022, quotedbl], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0027, -1 },  // (First char = [0x0027, quotesingle], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x00F6, odieresis], Kerning dist = -2)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00F6, odieresis], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x00DD, -1 },  // (First char = [0x00DD, Yacute], Second char = [0x00F8, oslash], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00F9, ugrave], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FA, uacute], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FB, ucircumflex], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FC, udieresis], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FD, yacute], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x00FF, ydieresis], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x00FF, ydieresis], Kerning dist = -1)
};
