#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_PatuaOne_Regular_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE =
{
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0034, four], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0034, four], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0034, four], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0034, four], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0036, six], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, six], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0037, seven], Kerning dist = -1)
    { 0x0056,  1 },  // (First char = [0x0056, V], Second char = [0x0037, seven], Kerning dist = 1)
    { 0x0057,  1 },  // (First char = [0x0057, W], Second char = [0x0037, seven], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0039, nine], Kerning dist = -1)
    { 0x0037, -1 },  // (First char = [0x0037, seven], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0039, -1 },  // (First char = [0x0039, nine], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -2 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0055, -1 },  // (First char = [0x0055, U], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0057, -2 },  // (First char = [0x0057, W], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, six], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, seven], Second char = [0x0056, V], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, six], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, seven], Second char = [0x0057, W], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0034, -1 },  // (First char = [0x0034, four], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0036, -1 },  // (First char = [0x0036, six], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0037,  1 },  // (First char = [0x0037, seven], Second char = [0x0059, Y], Kerning dist = 1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -1)
};
